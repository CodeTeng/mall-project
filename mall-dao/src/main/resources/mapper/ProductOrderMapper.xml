<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lt.mapper.ProductOrderMapper">

    <resultMap id="BaseResultMap" type="com.lt.entity.ProductOrder">
        <id property="productOrderId" column="productOrderId" jdbcType="INTEGER"/>
        <result property="productOrderCode" column="productOrderCode" jdbcType="VARCHAR"/>
        <result property="productOrderAddress" column="productOrderAddress" jdbcType="CHAR"/>
        <result property="productOrderDetailAddress" column="productOrderDetailAddress" jdbcType="VARCHAR"/>
        <result property="productOrderPost" column="productOrderPost" jdbcType="CHAR"/>
        <result property="productOrderReceiver" column="productOrderReceiver" jdbcType="VARCHAR"/>
        <result property="productOrderMobile" column="productOrderMobile" jdbcType="CHAR"/>
        <result property="productOrderPayDate" column="productOrderPayDate" jdbcType="TIMESTAMP"/>
        <result property="productOrderDeliveryDate" column="productOrderDeliveryDate" jdbcType="TIMESTAMP"/>
        <result property="productOrderConfirmDate" column="productOrderConfirmDate" jdbcType="TIMESTAMP"/>
        <result property="productOrderStatus" column="productOrderStatus" jdbcType="TINYINT"/>
        <result property="productOrderUserId" column="productOrderUserId" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        productOrderId,productOrderCode,productOrderAddress,
        productOrderDetailAddress,productOrderPost,productOrderReceiver,
        productOrderMobile,productOrderPayDate,productOrderDeliveryDate,
        productOrderConfirmDate,productOrderStatus,productOrderUserId
    </sql>

    <select id="getTotalTransactionCountByProductId" resultType="java.lang.Integer">
        select sum(productOrderItemNumber)
        from productorderitem
        where productOrderItemProductId = #{productId}
    </select>

    <!--获取当前用户订单-->
    <select id="getMyAllOrder" resultMap="getMyAllOrder">
        select productId,
        productOrderId,
        productOrderItemId,
        productOrderCode,
        productOrderPayDate,
        productName,
        productOrderItemNumber,
        productSalePrice,
        productOrderItemPrice,
        (select productImageSrc
        from productimage
        where productImageProductId = productId
        and productImageType = 0
        limit 1) as productImageSrc
        from productorder
        inner join productorderitem on productOrderItemOrderId = productOrderId
        inner join product on productId = productOrderItemProductId
        where productOrderUserId = #{userId}
        <if test="status != null">
            and productOrderStatus = #{status}
        </if>
        order by productOrderId desc
    </select>

    <!--封装订单数据-->
    <resultMap id="getMyAllOrder" type="com.lt.vo.order.ProductOrderVO">
        <id property="productOrderId" column="productOrderId"/>
        <result property="productOrderCode" column="productOrderCode"/>
        <result property="productOrderPayDate" column="productOrderPayDate"/>
        <!--一个订单可以有多个订单项-->
        <collection property="productOrderIItemList"
                    ofType="com.lt.vo.order.ProductOrderItemVO">
            <id property="productOrderItemId" column="productOrderItemId"/>
            <result property="productOrderItemPrice" column="productOrderItemPrice"/>
            <result property="productOrderItemNumber" column="productOrderItemNumber"/>
            <!--一个订单项对应一种商品-->
            <association property="productOrderItemProductVO" javaType="com.lt.vo.order.ProductOrderItemProductVO">
                <id property="productId" column="productId"/>
                <result property="productName" column="productName"/>
                <result property="productSalePrice" column="productSalePrice"/>
                <result property="productImageSrc" column="productImageSrc"/>
            </association>
        </collection>
    </resultMap>
</mapper>
